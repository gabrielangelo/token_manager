version: '3.8'

services:
  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - MIX_ENV=test
      - IN_DOCKER_TEST=true
      - DATABASE_URL=ecto://postgres:postgres@db_test:5432/token_manager_test
      - SECRET_KEY_BASE=test_only_secret_key_base
      - PHX_HOST=localhost
    volumes:
      - .:/app
      - deps:/app/deps
      - build:/app/_build
    depends_on:
      db_test:
        condition: service_healthy
    networks:
      - test_network
    command: >
      sh -c '
        while ! pg_isready -h db_test -p 5432 -U postgres; do
          echo "Waiting for database..."
          sleep 1
        done
        echo "Database is ready!"
        
        mix local.hex --force &&
        mix local.rebar --force &&
        mix deps.get &&
        mix deps.compile &&
        mix do ecto.create, ecto.migrate, test
      '

  db_test:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=token_manager_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - test_network

volumes:
  postgres_test_data:
  deps:
  build:

networks:
  test_network:
    driver: bridge