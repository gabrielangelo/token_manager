{application,token_manager,
    [{compile_env,
         [{token_manager,['Elixir.TokenManagerWeb.Gettext'],error},
          {token_manager,[dev_routes],error}]},
     {optional_applications,[]},
     {applications,
         [kernel,stdlib,elixir,logger,runtime_tools,phoenix,phoenix_ecto,
          ecto_sql,postgrex,swoosh,finch,telemetry_metrics,telemetry_poller,
          gettext,jason,dns_cluster,bandit,oban,ex_machina,excoveralls]},
     {description,"token_manager"},
     {modules,
         ['Elixir.TokenManager','Elixir.TokenManager.Application',
          'Elixir.TokenManager.DataCase','Elixir.TokenManager.Domain.Token',
          'Elixir.TokenManager.Domain.Token.TokenService',
          'Elixir.TokenManager.Domain.Token.TokenUsage',
          'Elixir.TokenManager.Factory',
          'Elixir.TokenManager.Infrastructure.Persistence.Schemas.TokenSchema',
          'Elixir.TokenManager.Infrastructure.Persistence.Schemas.TokenUsageSchema',
          'Elixir.TokenManager.Infrastructure.Repositories.TokenRepository',
          'Elixir.TokenManager.Infrastructure.StateManager.PubSubBroadcaster',
          'Elixir.TokenManager.Infrastructure.StateManager.TableOperations',
          'Elixir.TokenManager.Infrastructure.StateManager.TokenState',
          'Elixir.TokenManager.Infrastructure.StateManager.TokenStateManager',
          'Elixir.TokenManager.Infrastructure.Workers.TokenCleanupWorker',
          'Elixir.TokenManager.Mailer','Elixir.TokenManager.Repo',
          'Elixir.TokenManager.StateManager.Supervisor',
          'Elixir.TokenManager.TokenFactory','Elixir.TokenManagerWeb',
          'Elixir.TokenManagerWeb.ConnCase','Elixir.TokenManagerWeb.Endpoint',
          'Elixir.TokenManagerWeb.ErrorJSON',
          'Elixir.TokenManagerWeb.ErrorMessages',
          'Elixir.TokenManagerWeb.FallbackController',
          'Elixir.TokenManagerWeb.Gettext','Elixir.TokenManagerWeb.Router',
          'Elixir.TokenManagerWeb.Telemetry',
          'Elixir.TokenManagerWeb.TokenController',
          'Elixir.TokenManagerWeb.TokenJSON']},
     {registered,[]},
     {vsn,"0.1.0"},
     {mod,{'Elixir.TokenManager.Application',[]}}]}.
