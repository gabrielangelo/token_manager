import Config

# Determine if we're running in Docker
docker_env = System.get_env("IN_DOCKER") == "true"

database_host = if docker_env, do: "db", else: "localhost"
database_port = if docker_env, do: "5432", else: "5432"

database_url =
  System.get_env("DATABASE_URL") ||
    "ecto://postgres:postgres@#{database_host}:#{database_port}/token_manager_dev"

config :token_manager, TokenManager.Repo,
  url: database_url,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
# Configure the endpoint
config :token_manager, TokenManagerWeb.Endpoint,
  # Binding to all IPv4 interfaces
  http: [
    ip: {0, 0, 0, 0},
    port: String.to_integer(System.get_env("PORT") || "4000")
  ],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "dev_secret",
  watchers: []

# Configure Oban
config :token_manager, Oban,
  repo: TokenManager.Repo,
  plugins: [Oban.Plugins.Pruner],
  queues: [tokens: 10],
  peer: if(docker_env, do: :node_name_prefix, else: false)

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Enable dev routes for dashboard and mailbox
config :token_manager, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false
